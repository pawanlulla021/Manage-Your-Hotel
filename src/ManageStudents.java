
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Dell
 */
public class ManageStudents extends javax.swing.JFrame {

    java.sql.Date sqldate;
    java.util.Date date;

    /**
     * Creates new form ManageStudents
     */
    public ManageStudents() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField14 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(480, 150));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "After Booking Update & Delete", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setBackground(new java.awt.Color(255, 0, 0));
        jLabel3.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Your Room Number");

        jTextField3.setBackground(new java.awt.Color(255, 0, 0));
        jTextField3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(255, 255, 255));
        jTextField3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTable2.setForeground(new java.awt.Color(255, 0, 0));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Room Number", "Name", "From", "To"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel15.setBackground(new java.awt.Color(255, 0, 0));
        jLabel15.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("For How Many  Peoples");

        jTextField13.setBackground(new java.awt.Color(255, 0, 0));
        jTextField13.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField13.setForeground(new java.awt.Color(255, 255, 255));
        jTextField13.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        jLabel16.setBackground(new java.awt.Color(255, 0, 0));
        jLabel16.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("With Ac");

        jComboBox2.setBackground(new java.awt.Color(255, 0, 0));
        jComboBox2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "Non-AC" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTextField14.setBackground(new java.awt.Color(255, 0, 0));
        jTextField14.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField14.setForeground(new java.awt.Color(255, 255, 255));
        jTextField14.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        jButton5.setBackground(new java.awt.Color(255, 0, 0));
        jButton5.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        jButton5.setText("Search ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "RNUMBER", "RSTATUS", "RTYPE", "RFLOOR", "RWITHAC", "RRENT", "RBOOKED"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel16)
                .addGap(27, 27, 27)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(77, 77, 77))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(46, 46, 46)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton2)
                .addGap(40, 40, 40)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton1))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(116, 116, 116)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        jButton3.setBackground(new java.awt.Color(255, 0, 0));
        jButton3.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("X");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

//search rooms for update
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String rnumber = jTextField3.getText();
        int c;
        {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
                Statement st = con1.createStatement();
                String SQL = "SELECT * FROM student WHERE Rnum='" + rnumber + "'";
                ResultSet rs = st.executeQuery(SQL);
                ResultSetMetaData Rss = rs.getMetaData();
                c = Rss.getColumnCount();
                DefaultTableModel df = (DefaultTableModel) jTable2.getModel();
                df.setRowCount(0);
                if (rs.next()) {
                    Vector V2 = new Vector();
                    for (int a = 1; a <= c; a++) {

                        V2.add(rs.getString("Rnum"));
                        V2.add(rs.getString("name"));
                        V2.add(rs.getString("from1"));
                        V2.add(rs.getString("to1"));

                    }
                    df.addRow(V2);
                } else {
                    JOptionPane.showMessageDialog(null, "Room does not exist");
                }

            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

            }
        }


    }//GEN-LAST:event_jButton2ActionPerformed


    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed
//search new
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int c;
        //For single Person
        if (jTextField13.getText().equals("1") && jTextField14.getText().equals("AC")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
                Statement st = con1.createStatement();
                String AC = "AC";
                String Type1 = "Single Room(For One Person/Capacity-2)";
                //String Type2 = "Double Room (For Two People/Capacity-3)";
                //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type+"','"+Type2+"') && WithAC='" + AC + "'";
                String SQL = "SELECT * FROM rooms WHERE Type IN('" + Type1 + "') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

                //String SQL = "SELECT * FROM rooms";
                ResultSet rs = st.executeQuery(SQL);
                ResultSetMetaData Rss = rs.getMetaData();
                c = Rss.getColumnCount();
                DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
                df.setRowCount(0);
                while (rs.next()) {
                    Vector V2 = new Vector();
                    for (int a = 1; a <= c; a++) {
                        //V2.add(rs.getString("Floor"));
                        //V2.add(rs.getString("Type"));
                        V2.add(rs.getString("number"));
                        V2.add(rs.getString("RoomStatus"));
                        V2.add(rs.getString("Floor"));
                        V2.add(rs.getString("Type"));
                        V2.add(rs.getString("WithAC"));
                        V2.add(rs.getInt("Rent"));
                        V2.add(rs.getString("Booked"));
                    }
                    df.addRow(V2);
                }

            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

            }
        } //For Two People
        else if (jTextField13.getText().equals("2") && jTextField14.getText().equals("AC")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
                Statement st = con1.createStatement();
                //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
                /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
 /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
                String AC = "AC";
                String Type1 = "Single Room(For One Person/Capacity-2)";
                String Type2 = "Double Room (For Two People/Capacity-3)";
                String SQL = "SELECT * FROM rooms WHERE Type IN('" + Type1 + "','" + Type2 + "') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

                //String SQL = "SELECT * FROM rooms";
                ResultSet rs = st.executeQuery(SQL);
                ResultSetMetaData Rss = rs.getMetaData();
                c = Rss.getColumnCount();
                DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
                df.setRowCount(0);
                while (rs.next()) {
                    Vector V2 = new Vector();
                    for (int a = 1; a <= c; a++) {
                        //V2.add(rs.getString("Floor"));
                        //V2.add(rs.getString("Type"));
                        V2.add(rs.getString("number"));
                        V2.add(rs.getString("RoomStatus"));
                        V2.add(rs.getString("Floor"));
                        V2.add(rs.getString("Type"));
                        V2.add(rs.getString("WithAC"));
                        V2.add(rs.getInt("Rent"));
                        V2.add(rs.getString("Booked"));
                    }
                    df.addRow(V2);
                }

            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

            }
        } //For Three People
        else if (jTextField13.getText().equals("3") && jTextField14.getText().equals("AC")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
                Statement st = con1.createStatement();
                //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
                /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
 /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
                String AC = "AC";
                //String Type1= "Single Room(For One Person/Capacity-2)";
                String Type2 = "Double Room (For Two People/Capacity-3)";
                String SQL = "SELECT * FROM rooms WHERE Type IN('" + Type2 + "') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

                //String SQL = "SELECT * FROM rooms";
                ResultSet rs = st.executeQuery(SQL);
                ResultSetMetaData Rss = rs.getMetaData();
                c = Rss.getColumnCount();
                DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
                df.setRowCount(0);
                while (rs.next()) {
                    Vector V2 = new Vector();
                    for (int a = 1; a <= c; a++) {
                        //V2.add(rs.getString("Floor"));
                        //V2.add(rs.getString("Type"));
                        V2.add(rs.getString("number"));
                        V2.add(rs.getString("RoomStatus"));
                        V2.add(rs.getString("Floor"));
                        V2.add(rs.getString("Type"));
                        V2.add(rs.getString("WithAC"));
                        V2.add(rs.getInt("Rent"));
                        V2.add(rs.getString("Booked"));

                    }
                    df.addRow(V2);
                }

            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

            }
        } //For four People
        else if (jTextField13.getText().equals("4") && jTextField14.getText().equals("AC")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
                Statement st = con1.createStatement();
                //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
                /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
 /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
                String AC = "AC";
                //String Type1= "Single Room(For One Person/Capacity-2)";
                //String Type2 = "Double Room (For Two People/Capacity-3)";
                String Type4 = "Double Double Room(For Four People/Capacity-5,6)";
                String SQL = "SELECT * FROM rooms WHERE Type IN('" + Type4 + "') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

                //String SQL = "SELECT * FROM rooms";
                ResultSet rs = st.executeQuery(SQL);
                ResultSetMetaData Rss = rs.getMetaData();
                c = Rss.getColumnCount();
                DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
                df.setRowCount(0);
                while (rs.next()) {
                    Vector V2 = new Vector();
                    for (int a = 1; a <= c; a++) {
                        //V2.add(rs.getString("Floor"));
                        //V2.add(rs.getString("Type"));
                        V2.add(rs.getString("number"));
                        V2.add(rs.getString("RoomStatus"));
                        V2.add(rs.getString("Floor"));
                        V2.add(rs.getString("Type"));
                        V2.add(rs.getString("WithAC"));
                        V2.add(rs.getInt("Rent"));
                        V2.add(rs.getString("Booked"));

                    }
                    df.addRow(V2);
                }

            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

            }
        }

        //RoomsWith Non-Ac
        //For Single Person
        if (jTextField13.getText().equals("1") && jTextField14.getText().equals("Non-AC")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
                Statement st = con1.createStatement();
                //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
                /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
 /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
                String AC = "Non-AC";
                String Type1 = "Single Room(For One Person/Capacity-2)";
                //String Type2 = "Double Room (For Two People/Capacity-3)";
                //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type+"','"+Type2+"') && WithAC='" + AC + "'";
                String SQL = "SELECT * FROM rooms WHERE Type IN('" + Type1 + "') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

                //String SQL = "SELECT * FROM rooms";
                ResultSet rs = st.executeQuery(SQL);
                ResultSetMetaData Rss = rs.getMetaData();
                c = Rss.getColumnCount();
                DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
                df.setRowCount(0);
                while (rs.next()) {
                    Vector V2 = new Vector();
                    for (int a = 1; a <= c; a++) {
                        //V2.add(rs.getString("Floor"));
                        //V2.add(rs.getString("Type"));
                        V2.add(rs.getString("number"));
                        V2.add(rs.getString("RoomStatus"));
                        V2.add(rs.getString("Floor"));
                        V2.add(rs.getString("Type"));
                        V2.add(rs.getString("WithAC"));
                        V2.add(rs.getInt("Rent"));
                        V2.add(rs.getString("Booked"));

                    }
                    df.addRow(V2);
                }

            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

            }
        } //For Two People
        else if (jTextField13.getText().equals("2") && jTextField14.getText().equals("Non-AC")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
                Statement st = con1.createStatement();
                //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
                /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
 /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
                String AC = "Non-AC";
                String Type1 = "Single Room(For One Person/Capacity-2)";
                String Type2 = "Double Room (For Two People/Capacity-3)";
                String SQL = "SELECT * FROM rooms WHERE Type IN('" + Type1 + "','" + Type2 + "') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

                //String SQL = "SELECT * FROM rooms";
                ResultSet rs = st.executeQuery(SQL);
                ResultSetMetaData Rss = rs.getMetaData();
                c = Rss.getColumnCount();
                DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
                df.setRowCount(0);
                while (rs.next()) {
                    Vector V2 = new Vector();
                    for (int a = 1; a <= c; a++) {
                        //V2.add(rs.getString("Floor"));
                        //V2.add(rs.getString("Type"));
                        V2.add(rs.getString("number"));
                        V2.add(rs.getString("RoomStatus"));
                        V2.add(rs.getString("Floor"));
                        V2.add(rs.getString("Type"));
                        V2.add(rs.getString("WithAC"));
                        V2.add(rs.getInt("Rent"));
                        V2.add(rs.getString("Booked"));

                    }
                    df.addRow(V2);
                }

            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

            }
        } //For Three People
        else if (jTextField13.getText().equals("3") && jTextField14.getText().equals("Non-AC")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
                Statement st = con1.createStatement();
                //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
                /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
 /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
                String AC = "Non-AC";
                //String Type1= "Single Room(For One Person/Capacity-2)";
                String Type2 = "Double Room (For Two People/Capacity-3)";
                String SQL = "SELECT * FROM rooms WHERE Type IN('" + Type2 + "') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

                //String SQL = "SELECT * FROM rooms";
                ResultSet rs = st.executeQuery(SQL);
                ResultSetMetaData Rss = rs.getMetaData();
                c = Rss.getColumnCount();
                DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
                df.setRowCount(0);
                while (rs.next()) {
                    Vector V2 = new Vector();
                    for (int a = 1; a <= c; a++) {
                        //V2.add(rs.getString("Floor"));
                        //V2.add(rs.getString("Type"));
                        V2.add(rs.getString("number"));
                        V2.add(rs.getString("RoomStatus"));
                        V2.add(rs.getString("Floor"));
                        V2.add(rs.getString("Type"));
                        V2.add(rs.getString("WithAC"));
                        V2.add(rs.getInt("Rent"));
                        V2.add(rs.getString("Booked"));

                    }
                    df.addRow(V2);
                }

            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

            }
        } //for Four People
        else if (jTextField13.getText().equals("4") && jTextField14.getText().equals("Non-AC")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
                Statement st = con1.createStatement();
                //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
                /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
 /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
                String AC = "Non-AC";
                //String Type1= "Single Room(For One Person/Capacity-2)";
                //String Type2 = "Double Room (For Two People/Capacity-3)";
                String Type4 = "Double Double Room(For Four People/Capacity-5,6)";
                String SQL = "SELECT * FROM rooms WHERE Type IN('" + Type4 + "') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
                //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

                //String SQL = "SELECT * FROM rooms";
                ResultSet rs = st.executeQuery(SQL);
                ResultSetMetaData Rss = rs.getMetaData();
                c = Rss.getColumnCount();
                DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
                df.setRowCount(0);
                while (rs.next()) {
                    Vector V2 = new Vector();
                    for (int a = 1; a <= c; a++) {
                        //V2.add(rs.getString("Floor"));
                        //V2.add(rs.getString("Type"));
                        V2.add(rs.getString("number"));
                        V2.add(rs.getString("RoomStatus"));
                        V2.add(rs.getString("Floor"));
                        V2.add(rs.getString("Type"));
                        V2.add(rs.getString("WithAC"));
                        V2.add(rs.getInt("Rent"));
                        V2.add(rs.getString("Booked"));

                    }
                    df.addRow(V2);
                }

            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

            }
        } 
        else {
            //JOptionPane.showMessageDialog(null, "Room is not available");
        }

    }//GEN-LAST:event_jButton5ActionPerformed
//combo to textfield
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        String GetAC = jComboBox2.getSelectedItem().toString();
        jTextField14.setText(GetAC);
    }//GEN-LAST:event_jComboBox2ActionPerformed
//Deletion of customers
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String rnumber = jTextField3.getText();
        String Not = "Not-Booked";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st2 = con2.createStatement();
            String SQL2 = "update rooms set Booked='" + Not + "' where number='" + rnumber + "'";
            st2.executeUpdate(SQL2);
            String SQL3 = "DELETE from student WHERE Rnum='" + rnumber + "' ";
            st2.executeUpdate(SQL3);
            JOptionPane.showMessageDialog(null, "Successfully Deleted");

        } catch (Exception ex) {
JOptionPane.showMessageDialog(null, ex);
        }
  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageStudents.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageStudents.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageStudents.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageStudents.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageStudents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
