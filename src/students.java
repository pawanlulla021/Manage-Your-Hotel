
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Dell
 */
public class students extends javax.swing.JFrame {

    java.sql.Date sqldate;
    java.util.Date date;
    
    java.sql.Date sqldate1;
    java.util.Date date1;
    private void Pay_Bill() {
        try {
            int a = 10;
            int b = 20;
            int c = a + b;
        } catch (Exception e) {

        }
    }

    public void table_update() {
        int c;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st = con1.createStatement();
            //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
            String AC = "AC";
            String Type = "Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "'";
            //String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'"; 
            ResultSet rs = st.executeQuery(SQL);
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) jTable2.getModel();
            df.setRowCount(0);
            while (rs.next()) {
                Vector V2 = new Vector();
                for (int a = 1; a <= c; a++) {
                    //V2.add(rs.getString("Floor"));
                    //V2.add(rs.getString("Type"));
                    V2.add(rs.getString("number"));
                    V2.add(rs.getString("RoomStatus"));
                    V2.add(rs.getString("Floor"));
                    V2.add(rs.getString("Type"));
                    V2.add(rs.getString("WithAC"));

                }
                df.addRow(V2);
            }

        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

        }
    }

    /**
     * Creates new form students
     */
    public students() {
        initComponents();
        Pay_Bill();
        //table_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jTextField9 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jTextField13.setText("jTextField13");

        jTextField14.setText("jTextField14");

        jTextField15.setText("jTextField15");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(480, 150));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jButton3.setBackground(new java.awt.Color(255, 0, 0));
        jButton3.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("X");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search For Available Rooms", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("For How Many People");

        jTextField8.setBackground(new java.awt.Color(255, 0, 0));
        jTextField8.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(255, 255, 255));
        jTextField8.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField8.setCaretColor(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("With/without AC");

        jComboBox3.setBackground(new java.awt.Color(255, 0, 0));
        jComboBox3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jComboBox3.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "Non-AC" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField9.setBackground(new java.awt.Color(255, 0, 0));
        jTextField9.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(255, 255, 255));
        jTextField9.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField9.setCaretColor(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 0, 0));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Available Rooms", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        jTable3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTable3.setForeground(new java.awt.Color(255, 0, 0));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Room Number", "Room Status", "Room Floor", "Room Type", "With_AC", "Rent", "Booked"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jButton4))
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 258, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Book Rooms", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("NAME");

        jTextField1.setBackground(new java.awt.Color(255, 0, 0));
        jTextField1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(250, 255, 255));
        jTextField1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField1.setCaretColor(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Number");

        jTextField2.setBackground(new java.awt.Color(255, 0, 0));
        jTextField2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField2.setCaretColor(new java.awt.Color(255, 255, 255));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("OTP");

        jTextField6.setBackground(new java.awt.Color(255, 0, 0));
        jTextField6.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField6.setForeground(java.awt.Color.white);
        jTextField6.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField6.setCaretColor(new java.awt.Color(255, 255, 255));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gender");

        jComboBox1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 5, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Select The Duration: -");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("From");

        jDateChooser1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("To");

        jDateChooser2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Room  Number");

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Room Floor");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        jButton1.setText("Select Aadhaar & Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("With/Without AC");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Room Type");

        jTextField3.setBackground(new java.awt.Color(255, 0, 0));
        jTextField3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(255, 255, 255));
        jTextField3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField3.setCaretColor(new java.awt.Color(255, 255, 255));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.setBackground(new java.awt.Color(255, 0, 0));
        jTextField4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(255, 255, 255));
        jTextField4.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField4.setCaretColor(new java.awt.Color(255, 255, 255));

        jTextField7.setBackground(new java.awt.Color(255, 0, 0));
        jTextField7.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(255, 255, 255));
        jTextField7.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField7.setCaretColor(new java.awt.Color(255, 255, 255));

        jTextField10.setBackground(new java.awt.Color(255, 0, 0));
        jTextField10.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(255, 255, 255));
        jTextField10.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField10.setCaretColor(new java.awt.Color(255, 255, 255));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Status");

        jTextField11.setBackground(new java.awt.Color(255, 0, 0));
        jTextField11.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField11.setForeground(new java.awt.Color(255, 255, 255));
        jTextField11.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField11.setCaretColor(new java.awt.Color(255, 255, 255));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Total Bill");

        jTextField12.setBackground(new java.awt.Color(255, 0, 0));
        jTextField12.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextField12.setForeground(new java.awt.Color(255, 255, 255));
        jTextField12.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jTextField12.setCaretColor(new java.awt.Color(255, 255, 255));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setText("Send OTP");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(67, 67, 67)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField6)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(87, 87, 87)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextField4)
                        .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                        .addComponent(jTextField7)
                        .addComponent(jTextField10)
                        .addComponent(jTextField11)))
                .addGap(157, 157, 157))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(139, 139, 139))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(17, 17, 17)
                                                .addComponent(jLabel7))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jTextField10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(36, 36, 36)
                                        .addComponent(jLabel8))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel15)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
//Correct

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String book = null;
        String NAME = jTextField1.getText();
        String NUMBER = jTextField2.getText();
        String booked= jTextField14.getText();
        if(booked.equals("Not-Booked"))
        {
            book="Booked";
        }    
        String OTP = jTextField6.getText();
        String GENDER = (String) jComboBox1.getSelectedItem();
        date = jDateChooser1.getDate();
        sqldate = new java.sql.Date(date.getTime());
        date1 = jDateChooser2.getDate();
        sqldate1 = new java.sql.Date(date1.getTime());
        String RNUMBER= jTextField3.getText();
        
        String STATUS= jTextField4.getText();
        String FLOOR= jTextField7.getText();
        String TYPE= jTextField11.getText();
        String WITHAC= jTextField10.getText();
        String BILL= jTextField12.getText();
        
        
        
        /*String R_STATUS= jTextField4.getText();
        String R_FLOOR= jTextField7.getText();
        String R_TYPE= jTextField11.getText();
        String WITHAC= jTextField10.getText();
        String BILL= jTextField12.getText();
        int TOTAL_BILL=Integer.parseInt(BILL);
        String R_BOOKE= "Room Booked";*/
        
        JFileChooser jfile = new JFileChooser();
        jfile.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter;
        filter = new FileNameExtensionFilter("*.Image", "jpg", "png");
        jfile.addChoosableFileFilter(filter);
        int result = jfile.showSaveDialog(null);
        File selectedFile = jfile.getSelectedFile();
        String filename = selectedFile.getName();
        if (filename.endsWith(".jpg") || filename.endsWith(".JPG") || filename.endsWith(".PNG") || filename.endsWith(".png")) {
            if (result == JFileChooser.APPROVE_OPTION) 
            {
                String path = selectedFile.getAbsolutePath();
                ImageIcon myImage = new ImageIcon(path);
                Image img = myImage.getImage();
                Image newImage = img.getScaledInstance(jLabel11.getWidth(), jLabel11.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon image = new ImageIcon(newImage);
                //jLabel1.setIcon(image);
                FileInputStream fis = null;
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
                    fis = new FileInputStream(path);
                    PreparedStatement insert;
                    

                      insert = con1.prepareStatement("insert into student(NAME ,NUMBER ,OTP ,GENDER,from1,to1,addhar,Rnum,Room_Status,Room_Floor,Room_Type,With_AC,Total_Bill,Booked) values(?,?,?,?,'" + sqldate + "','" + sqldate1 + "',?,'"+RNUMBER+"','"+STATUS+"','"+FLOOR+"','"+TYPE+"','"+WITHAC+"','"+BILL+"','"+book+"')");    
                      //insert = con1.prepareStatement("insert into student(NAME ,NUMBER ,OTP ,GENDER,from1,to1,addhar,Room Number,Status,Floor,Room Type,WithAC,TotalBill,Booked) values(?,?,?,?,'" + sqldate + "','" + sqldate + "',?,?,?,?,?,?,?,?)");
                      insert.setString(1, NAME);
                      insert.setString(2, NUMBER);
                      insert.setString(3, OTP);
                      insert.setString(4, GENDER);
                      insert.setBinaryStream(5, fis);
                      //insert.setString(6,RNUMBER );
                      /*insert.setString(7,R_STATUS );
                      insert.setString(8,R_FLOOR );
                      insert.setString(9,R_TYPE );
                      insert.setString(10,WITHAC );
                      insert.setInt(11, TOTAL_BILL);
                      //insert.setString(11,TOTAL_BILL  );
                     insert.setString(12,R_BOOKE);*/
                      
                    int response = JOptionPane.showConfirmDialog(rootPane, "Are you sure to save a image", "Confirm....", JOptionPane.YES_NO_OPTION);
                    if (response == 0) {
                        int record = insert.executeUpdate();
                        if (record == 1) {
                            JOptionPane.showMessageDialog(rootPane, "Record Added Successfully", "Ok done", 1);
                            jTextField1.setText("");
                            jTextField2.setText("");
                         
                            //jTextField3.setText("");
                            jTextField4.setText("");
                            jTextField6.setText("");
                            jTextField7.setText("");
                            jTextField10.setText("");
                            jTextField11.setText("");
                            jTextField12.setText("");
                            
                            //jTextField5.setText("");
                            
                            //jList1.setName("");
                            //jComboBox1.setSelectedItem("");
                            //jComboBox2.setSelectedItem("");
                            //jSpinner1.setValue("");
                            //String date1 = "";
                            //java.util.Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(date1);
                            //jDateChooser1.setDate(date1);

                            //jDateChooser2.setDateFormatString("");*/
                            jTextField1.requestFocus();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Sorry ", "Can't Store Iamge", 1);
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Cancelled by user ", "Cancel", 1);
                    }
                } catch (HeadlessException | FileNotFoundException | ClassNotFoundException | SQLException ex) {
                    System.out.println("" + ex);
                }
            }
        } 
        else 
        {
            JOptionPane.showMessageDialog(rootPane, "Please Select Image File", "Try Again", 1);
        }
        //Update Room
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st = con1.createStatement();
            String RB="Booked";
            String RN= jTextField3.getText();
            String SQL1 = "UPDATE rooms SET  Booked = '" + RB + "' WHERE number='" +RN+ "'";
            st.executeUpdate(SQL1);
            //String SQL2 = "UPDATE student SET  Booked = '" + RB + "' WHERE number='" +RN+ "'";
            //st.executeUpdate(SQL2);
            JOptionPane.showMessageDialog(null,"Booking Of "+ RN +" Is done");
        } catch (Exception ex) {
            String RN= jTextField3.getText();
            JOptionPane.showMessageDialog(null,"Booking Of "+ RN +" Is not booked");
        }
    }


    /* 
//Select AaDhar
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    }//GEN-LAST:event_jButton1ActionPerformed
*/
//Billing     //close
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed
//From Combo To TextField
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        String GetAC=jComboBox3.getSelectedItem().toString();
        jTextField9.setText(GetAC);
    }//GEN-LAST:event_jComboBox3ActionPerformed
//Search record from room table
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //String GetAC=jComboBox3.getSelectedItem().toString();
        int c;
        //For single Person
        if(jTextField8.getText().equals("1") && jTextField9.getText().equals("AC"))
        {
            try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st = con1.createStatement();
            String AC = "AC";
            String Type1= "Single Room(For One Person/Capacity-2)";
            //String Type2 = "Double Room (For Two People/Capacity-3)";
            //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type+"','"+Type2+"') && WithAC='" + AC + "'";
            String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

            //String SQL = "SELECT * FROM rooms";
            ResultSet rs = st.executeQuery(SQL);
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
            df.setRowCount(0);
            while (rs.next()) {
                Vector V2 = new Vector();
                for (int a = 1; a <= c; a++) {
                    //V2.add(rs.getString("Floor"));
                    //V2.add(rs.getString("Type"));
                    V2.add(rs.getString("number"));
                    V2.add(rs.getString("RoomStatus"));
                    V2.add(rs.getString("Floor"));
                    V2.add(rs.getString("Type"));
                    V2.add(rs.getString("WithAC"));
                    V2.add(rs.getInt("Rent"));
                    V2.add(rs.getString("Booked"));
                }
                df.addRow(V2);
            }

        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

        }
        }
        //For Two People
        else if(jTextField8.getText().equals("2") && jTextField9.getText().equals("AC"))
        {
            try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st = con1.createStatement();
            //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
            /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
            /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
            String AC = "AC";
            String Type1= "Single Room(For One Person/Capacity-2)";
            String Type2 = "Double Room (For Two People/Capacity-3)";
            String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"','"+Type2+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

            //String SQL = "SELECT * FROM rooms";
            ResultSet rs = st.executeQuery(SQL);
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
            df.setRowCount(0);
            while (rs.next()) {
                Vector V2 = new Vector();
                for (int a = 1; a <= c; a++) {
                    //V2.add(rs.getString("Floor"));
                    //V2.add(rs.getString("Type"));
                    V2.add(rs.getString("number"));
                    V2.add(rs.getString("RoomStatus"));
                    V2.add(rs.getString("Floor"));
                    V2.add(rs.getString("Type"));
                    V2.add(rs.getString("WithAC"));
                    V2.add(rs.getInt("Rent"));
                    V2.add(rs.getString("Booked"));
                }
                df.addRow(V2);
            }

        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

        }  
        }
        //For Three People
        else if(jTextField8.getText().equals("3") && jTextField9.getText().equals("AC"))
        {
            try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st = con1.createStatement();
            //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
            /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
            /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
            String AC = "AC";
            //String Type1= "Single Room(For One Person/Capacity-2)";
            String Type2 = "Double Room (For Two People/Capacity-3)";
            String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type2+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

            //String SQL = "SELECT * FROM rooms";
            ResultSet rs = st.executeQuery(SQL);
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
            df.setRowCount(0);
            while (rs.next()) {
                Vector V2 = new Vector();
                for (int a = 1; a <= c; a++) {
                    //V2.add(rs.getString("Floor"));
                    //V2.add(rs.getString("Type"));
                    V2.add(rs.getString("number"));
                    V2.add(rs.getString("RoomStatus"));
                    V2.add(rs.getString("Floor"));
                    V2.add(rs.getString("Type"));
                    V2.add(rs.getString("WithAC"));
                    V2.add(rs.getInt("Rent"));
                    V2.add(rs.getString("Booked"));

                }
                df.addRow(V2);
            }

        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

        }  
        }
        //For four People
        else if(jTextField8.getText().equals("4") && jTextField9.getText().equals("AC"))
        {
            try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st = con1.createStatement();
            //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
            /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
            /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
            String AC = "AC";
            //String Type1= "Single Room(For One Person/Capacity-2)";
            //String Type2 = "Double Room (For Two People/Capacity-3)";
            String Type4="Double Double Room(For Four People/Capacity-5,6)";
            String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type4+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

            //String SQL = "SELECT * FROM rooms";
            ResultSet rs = st.executeQuery(SQL);
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
            df.setRowCount(0);
            while (rs.next()) {
                Vector V2 = new Vector();
                for (int a = 1; a <= c; a++) {
                    //V2.add(rs.getString("Floor"));
                    //V2.add(rs.getString("Type"));
                    V2.add(rs.getString("number"));
                    V2.add(rs.getString("RoomStatus"));
                    V2.add(rs.getString("Floor"));
                    V2.add(rs.getString("Type"));
                    V2.add(rs.getString("WithAC"));
                    V2.add(rs.getInt("Rent"));
                    V2.add(rs.getString("Booked"));

                }
                df.addRow(V2);
            }

        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

        }  
        }
        
        //RoomsWith Non-Ac
        //For Single Person
        if(jTextField8.getText().equals("1") && jTextField9.getText().equals("Non-AC"))
        {
            try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st = con1.createStatement();
            //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
            /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
            /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
            String AC = "Non-AC";
            String Type1= "Single Room(For One Person/Capacity-2)";
            //String Type2 = "Double Room (For Two People/Capacity-3)";
            //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type+"','"+Type2+"') && WithAC='" + AC + "'";
            String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

            //String SQL = "SELECT * FROM rooms";
            ResultSet rs = st.executeQuery(SQL);
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
            df.setRowCount(0);
            while (rs.next()) {
                Vector V2 = new Vector();
                for (int a = 1; a <= c; a++) {
                    //V2.add(rs.getString("Floor"));
                    //V2.add(rs.getString("Type"));
                    V2.add(rs.getString("number"));
                    V2.add(rs.getString("RoomStatus"));
                    V2.add(rs.getString("Floor"));
                    V2.add(rs.getString("Type"));
                    V2.add(rs.getString("WithAC"));
                    V2.add(rs.getInt("Rent"));
                    V2.add(rs.getString("Booked"));

                }
                df.addRow(V2);
            }

        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

        }
        }        
        //For Two People
        else if(jTextField8.getText().equals("2") && jTextField9.getText().equals("Non-AC"))
        {
            try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st = con1.createStatement();
            //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
            /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
            /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
            String AC = "Non-AC";
            String Type1= "Single Room(For One Person/Capacity-2)";
            String Type2 = "Double Room (For Two People/Capacity-3)";
            String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"','"+Type2+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

            //String SQL = "SELECT * FROM rooms";
            ResultSet rs = st.executeQuery(SQL);
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
            df.setRowCount(0);
            while (rs.next()) {
                Vector V2 = new Vector();
                for (int a = 1; a <= c; a++) {
                    //V2.add(rs.getString("Floor"));
                    //V2.add(rs.getString("Type"));
                    V2.add(rs.getString("number"));
                    V2.add(rs.getString("RoomStatus"));
                    V2.add(rs.getString("Floor"));
                    V2.add(rs.getString("Type"));
                    V2.add(rs.getString("WithAC"));
                    V2.add(rs.getInt("Rent"));
                    V2.add(rs.getString("Booked"));

                }
                df.addRow(V2);
            }

        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

        }  
        }        
        
        //For Three People
        else if(jTextField8.getText().equals("3") && jTextField9.getText().equals("Non-AC"))
        {
            try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st = con1.createStatement();
            //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
            /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
            /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
            String AC = "Non-AC";
            //String Type1= "Single Room(For One Person/Capacity-2)";
            String Type2 = "Double Room (For Two People/Capacity-3)";
            String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type2+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

            //String SQL = "SELECT * FROM rooms";
            ResultSet rs = st.executeQuery(SQL);
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
            df.setRowCount(0);
            while (rs.next()) {
                Vector V2 = new Vector();
                for (int a = 1; a <= c; a++) {
                    //V2.add(rs.getString("Floor"));
                    //V2.add(rs.getString("Type"));
                    V2.add(rs.getString("number"));
                    V2.add(rs.getString("RoomStatus"));
                    V2.add(rs.getString("Floor"));
                    V2.add(rs.getString("Type"));
                    V2.add(rs.getString("WithAC"));
                    V2.add(rs.getInt("Rent"));
                    V2.add(rs.getString("Booked"));

                }
                df.addRow(V2);
            }

        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

        }  
        }        
        //for Four People
        else if(jTextField8.getText().equals("4") && jTextField9.getText().equals("Non-AC"))
        {
            try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel", "root", "");
            Statement st = con1.createStatement();
            //String SQL = "SELECT * FROM rooms WHERE Type=\"Single Room(For One Person/Capacity-2)\" && WithAC=\"AC\"";
            /*String AC="AC";
            String Type="Single Room(For One Person/Capacity-2)";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Type='"+Type+"'";*/
            /*String AC="AC";
            String SQL = "SELECT * FROM rooms WHERE WithAC='"+AC+"' && Floor='"+1+"'";*/
            String AC = "Non-AC";
            //String Type1= "Single Room(For One Person/Capacity-2)";
            //String Type2 = "Double Room (For Two People/Capacity-3)";
            String Type4="Double Double Room(For Four People/Capacity-5,6)";
            String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type4+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE Type IN('"+Type1+"') && WithAC='" + AC + "'";
            //String SQL = "SELECT * FROM rooms WHERE WithAC='" + AC + "' && Type='" + Type + "' && Type='" + Type2 + "' ";

            //String SQL = "SELECT * FROM rooms";
            ResultSet rs = st.executeQuery(SQL);
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
            df.setRowCount(0);
            while (rs.next()) {
                Vector V2 = new Vector();
                for (int a = 1; a <= c; a++) {
                    //V2.add(rs.getString("Floor"));
                    //V2.add(rs.getString("Type"));
                    V2.add(rs.getString("number"));
                    V2.add(rs.getString("RoomStatus"));
                    V2.add(rs.getString("Floor"));
                    V2.add(rs.getString("Type"));
                    V2.add(rs.getString("WithAC"));
                    V2.add(rs.getInt("Rent"));
                    V2.add(rs.getString("Booked"));

                }
                df.addRow(V2);
            }

        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Something went wrong please try again(-_-)");

        }  
        }        
        
        
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed
//Select Record From Table
    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
        int s = jTable3.getSelectedRow();

        jTextField3.setText(df.getValueAt(s,  0).toString());
        jTextField4.setText(df.getValueAt(s,  1).toString());
        jTextField7.setText(df.getValueAt(s,  2).toString());
        jTextField11.setText(df.getValueAt(s, 3).toString());
        jTextField10.setText(df.getValueAt(s, 4).toString());
        jTextField12.setText(df.getValueAt(s, 5).toString());
        jTextField14.setText(df.getValueAt(s,  6).toString());
    }//GEN-LAST:event_jTable3MouseClicked

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new students().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
